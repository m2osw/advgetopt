
* Remove boost dependency (I think all is available in the snapdev library).

* Allow for multiple DEFAULT that accept just one filename. Use a "FIFO"
  type of list to accept those (TBD: how to properly define the order? we
  can use the array's order, I would imagine).

* Further test that he variables support works (in the getopt_info and such.)

* A section name in a file is totally ignored if no parameters are added.
  In some cases, we may want to know that the user created such a section.
  (i.e. that happens in the iplock definitions for the ipload.)

      [section::header]

      [section::early_content]
      after = header

* The time when the parse_options_from_group_names() gets called is wrong
  in case we do not have the system parameters from advgetopt it won't
  add the long help command line options even if another system (snaplogger,
  communicatord) adds its own system flags. I think we can at least have
  flags which tell us whether we added something to avoid re-adding the same
  option. (we can also check whether it's already there.)

* Add a test to verify that '\n' is correctly handled on small strings
  (we had the case in our fluid-settings / GUI --help where the string would
  wrap just a little and the wrap part + Environment variable was less than
  what would fit one line...)

* I had an idea which would be to make the validators plugins. One potential
  advantage is that since we don't use them much, they could be loaded on an
  as-needed basis. At the same time, it makes their implementation more
  complicated.

* Finish up on the ARRAY implementation:
** Add tests


